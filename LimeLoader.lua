if not game:IsLoaded() then game.Loaded:Wait() end local req = http_request or request or syn.request if not req then local notifLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/iSkidYourScripts/Lime-Hub/main/Libraries/Notifications.lua"))() notifLib:SendNotification("Error", "Your executor is not compatible with Lime Hub!", 3) end
if makefolder and isfolder and not isfolder("Lime") then makefolder("Lime") makefolder("Lime/Savefile") makefolder("Lime/Data") end
if readfile and isfile and isfile("Lime/Savefile/SlapBattles.lime") then getgenv().settings = game:GetService("HttpService"):JSONDecode(readfile("Lime/Savefile/SlapBattles.lime")) end
if not isfile("/Lime/Data/Quotes.txt") then local notifLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/iSkidYourScripts/Lime-Hub/main/Libraries/Notifications.lua"))() notifLib:SendNotification("Info", "Lime Hub is downloading interface assets (This may take a few seconds)", 3) writefile("/Lime/Data/Quotes.txt", req({ Url = "https://raw.githubusercontent.com/iSkidYourScripts/Lime-Hub/main/Data/Quotes.txt" }).Body); end
if not isfile("/Lime/Savefile/Bindings.lime") then writefile("/Lime/Savefile/Bindings.lime", game:GetService("HttpService"):JSONEncode({ Key = "RightControl" })) end
local response = req({ Url = "https://raw.githubusercontent.com/iSkidYourScripts/Lime-Hub/main/Games/" .. game.PlaceId .. ".lua", Method = "GET" })
if response.StatusCode ~= 404 then loadstring(response.Body)() else local notifLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/iSkidYourScripts/Lime-Hub/main/Libraries/Notifications.lua"))() notifLib:SendNotification("Warning", "Lime Hub does not support the game you are currently trying to play.", 3) return end
-- LimeLoader v1.021x
